{
    "topic_id": "2_2",
    "title": "2_2 创建有序与无序列表",
    "levels": [
            {
                "level": 1,
                "description": "在网页开发中，列表是一种非常常见的内容组织方式，它可以帮助我们将信息以清晰、有条理的形式展示给用户。HTML 提供了两种主要的列表类型：有序列表和无序列表。有序列表使用 `ol` 标签（ordered list 的缩写），表示其中的项目是有顺序的，浏览器会自动为每个项目添加数字编号。在 `ol` 标签内部，我们使用 `li` 标签（list item 的缩写）来定义每一个具体的列表项。例如，如果你想列出一个步骤流程，比如‘第一步：准备材料’，‘第二步：开始制作’，那么使用有序列表就非常合适。与之相对的是无序列表，使用 `ul` 标签（unordered list），它的列表项前通常显示为圆点或其他符号，适用于没有特定顺序的项目集合，比如购物清单。无论是哪种列表，`li` 标签都是用来包裹每一个具体项目的唯一正确方式。理解这些基本标签的作用是构建结构化网页内容的第一步，它们不仅让页面看起来更整洁，也为后续的样式设计和交互功能打下基础。"
            },
            {
                "level": 2,
                "description": "在实际开发中，有序和无序列表经常被用于导航菜单、文章目录、产品特性介绍等场景。例如，一个网站的侧边栏导航可能使用无序列表 `ul` 来列出各个页面链接，因为这些页面之间并没有严格的先后顺序。而一篇教程的文章大纲则更适合使用有序列表 `ol`，因为它体现了章节的递进关系。我们还可以将列表嵌套使用，比如在一个无序列表中包含一个有序列表，这在展示复杂信息结构时非常有用。例如，主列表项是不同的宠物种类，而在每种宠物下用有序列表列出其照顾步骤。这种嵌套结构通过在 `li` 标签内部再写 `ol` 或 `ul` 来实现。此外，列表元素可以与其他 HTML 元素结合使用，比如在 `li` 中加入图片、链接或段落，从而丰富内容表现力。需要注意的是，虽然我们可以用 CSS 改变列表的样式，比如隐藏项目符号或修改编号格式，但语义结构仍由 HTML 标签决定。因此，选择正确的标签不仅是视觉呈现的问题，更是网页可访问性和搜索引擎优化的重要部分。"
            },
            {
                "level": 3,
                "description": "从底层机制来看，浏览器在解析 `ol` 和 `ul` 标签时会为其生成对应的 DOM 节点，并根据 HTML 规范自动处理编号逻辑。对于 `ol`，默认从 1 开始递增，但我们可以通过 `start` 属性指定起始数字，也可以使用 `reversed` 属性让编号倒序排列。此外，`type` 属性可以控制编号的样式，如字母或罗马数字。这些属性直接影响浏览器如何渲染列表编号，而不必依赖 CSS。在性能方面，深层嵌套的列表可能会增加 DOM 复杂度，影响页面加载和操作效率，尤其是在动态生成大量列表项时。因此，在构建大型数据列表时，建议采用虚拟滚动等优化技术，只渲染可视区域内的 `li` 元素。同时，为了提升可访问性，屏幕阅读器会识别 `ol` 和 `ul` 的语义，并告知用户当前处于第几个列表项，这对无障碍浏览至关重要。合理使用 ARIA 属性还能进一步增强交互体验。总之，列表不仅仅是视觉上的排版工具，它们在语义结构、用户体验和性能优化层面都扮演着重要角色。"
            },
            {
                "level": 4,
                "description": "现在我们来完成一个综合练习，帮助你巩固对有序和无序列表的理解。假设你要为一个动物园官网编写一段关于动物喂养指南的内容。请在 `h3` 标题‘大象喂养指南’下方创建一个有序列表，列出三个主要喂养步骤：1. 准备新鲜草料，2. 添加维生素补充剂，3. 提供充足饮水。接着，在另一个 `h3` 标题‘猴子日常饮食’下方创建一个无序列表，包含三项食物：香蕉、苹果、坚果。注意确保 `ol` 和 `ul` 都正确地放在对应标题之后，并且每个列表项都用 `li` 包裹。以下是示例代码：\n\n```html\n<h3>大象喂养指南</h3>\n<ol>\n  <li>准备新鲜草料</li>\n  <li>添加维生素补充剂</li>\n  <li>提供充足饮水</li>\n</ol>\n\n<h3>猴子日常饮食</h3>\n<ul>\n  <li>香蕉</li>\n  <li>苹果</li>\n  <li>坚果</li>\n</ul>\n```\n\n这段代码展示了如何结合标题与不同类型的列表来组织信息。你可以尝试修改 `ol` 的 `start` 值或添加嵌套列表来进一步练习。"
            }
        ],
    "sc_all": [
        {"topic_id": "1_1", "select_element": ["h1", "h2", "h3", "h4", "h5", "h6", "p","span"]},
        {"topic_id": "1_2", "select_element": []},
        {"topic_id": "1_3", "select_element": ["<!DOCTYPE>", "html", "head", "body","meta", "title","footer"]},
        {"topic_id": "2_1", "select_element": ["div"]},
        {"topic_id": "2_2", "select_element": ["ol","li"]},
        {"topic_id": "2_3", "select_element": ["ul"]},
        {"topic_id": "3_1", "select_element": ["input", "button"]},
        {"topic_id": "3_2", "select_element": ["label"]},
        {"topic_id": "3_3", "select_element": ["form"]},
        {"topic_id": "4_1", "select_element": []},
        {"topic_id": "4_2", "select_element": []},
        {"topic_id": "4_3", "select_element": []},
        {"topic_id": "5_1", "select_element": ["img"]},
        {"topic_id": "5_2", "select_element": ["audio","source"]},
        {"topic_id": "5_3", "select_element": ["video"]},
        {"topic_id": "6_1", "select_element": []},
        {"topic_id": "6_2", "select_element": []},
        {"topic_id": "6_3", "select_element": []}
    ]
}