{
    "topic_id": "2_3",
    "title": "2_3 创建无序列表",
    "levels": [
            {
                "level": 1,
                "description": "在网页开发中，我们经常需要展示一系列没有特定顺序的项目，比如购物清单、兴趣爱好或菜单选项。这时候就需要使用HTML中的无序列表。无序列表使用`<ul>`标签来定义，它的全称是'unordered list'，意思是项目之间没有先后之分。在`<ul>`标签内部，每一个具体的项目都用`<li>`标签表示，`li`是'list item'的缩写，代表列表中的一个条目。浏览器默认会在每个`<li>`前面显示一个圆点作为标记，表示这是一个列表项。例如，如果你想列出几种水果，就可以这样写：先用`<ul>`开始一个无序列表，然后在其中写三个`<li>`，分别包含苹果、香蕉和橙子，最后用`</ul>`结束列表。整个结构就像是一个容器装着几个小盒子，每个小盒子放一个项目。这种结构不仅让内容更有条理，也方便后续用CSS进行样式美化。需要注意的是，`<ul>`不能单独使用，必须配合`<li>`一起出现，否则就失去了列表的意义。"
            },
            {
                "level": 2,
                "description": "在实际开发中，无序列表不仅仅用于简单的文字罗列，它常常和其他HTML元素组合使用，构建更复杂的页面结构。例如，在导航菜单中，开发者通常会用`<ul>`包裹多个`<li>`，而每个`<li>`里面再嵌入`<a>`标签，形成可点击的链接菜单。又比如在产品展示页面，每个`<li>`可能包含一张图片、一段描述和一个价格信息，通过合理组织这些内容，可以让页面看起来整齐美观。此外，无序列表还可以嵌套使用，即在一个`<li>`内部再创建一个新的`<ul>`，用来表示子菜单或层级关系。这时外层列表称为父列表，内层列表是子列表。这种嵌套结构在网站的多级导航或目录树中非常常见。值得注意的是，虽然浏览器默认给`<ul>`加了圆点和缩进，但我们可以通过CSS完全自定义这些样式，比如改成方块、箭头甚至图标。掌握这些常见用法，能让我们更灵活地运用无序列表来满足不同的设计需求。"
            },
            {
                "level": 3,
                "description": "深入理解无序列表的工作机制有助于写出更高效、语义更清晰的代码。从HTML语义化的角度看，`<ul>`不仅仅是一个视觉上的列表，它还向浏览器和辅助技术（如屏幕阅读器）传达了内容之间的逻辑关系。使用`<ul>`而不是用多个段落或换行符来分隔项目，能让机器更好地理解这是同一类事物的集合。这对于提升网页的可访问性和SEO优化都有重要意义。在文档对象模型（DOM）中，`<ul>`元素是一个容器节点，它的`children`属性会返回所有直接子元素，通常是多个`<li>`节点。通过JavaScript可以动态添加、删除或修改这些子元素，实现交互式列表功能。性能方面，当列表项目非常多时，一次性渲染大量`<li>`可能导致页面卡顿，此时可以采用虚拟滚动等技术只渲染可见区域的内容。另外，现代前端框架如React中，列表通常通过数据映射生成，确保结构一致且易于维护。理解这些底层机制，能帮助开发者做出更合理的架构选择。"
            },
            {
                "level": 4,
                "description": "现在我们来做一个综合练习，巩固对无序列表的理解。假设我们要为一个宠物店的网站添加一段关于狗狗日常活动的介绍。要求在h3标题下方创建一个无序列表，列出三项活动：散步、接飞盘、啃骨头。注意列表必须紧跟在标题后面，且三个项目顺序不能错。以下是参考代码：\n\n```html\n<h3>狗狗的日常活动</h3>\n<ul>\n  <li>散步</li>\n  <li>接飞盘</li>\n  <li>啃骨头</li>\n</ul>\n```\n\n这段代码首先用`<h3>`定义标题，然后换行写`<ul>`开启无序列表，接着用三个`<li>`分别写入活动内容，最后闭合`</ul>`。你可以尝试修改列表项的文字，或者在某个`<li>`里加入`<strong>`标签让某个词变粗。还可以试着用CSS给列表添加背景色或改变项目符号的颜色。这个练习不仅能检验你是否掌握了基本语法，也为接下来完成猫咪活动列表的任务打下基础。记住，良好的代码格式——比如适当的缩进和换行——会让结构更清晰，便于团队协作和后期维护。"
            }
        ],
    "sc_all": [
        {"topic_id": "1_1", "select_element": ["h1", "h2", "h3", "h4", "h5", "h6", "p","span"]},
        {"topic_id": "1_2", "select_element": []},
        {"topic_id": "1_3", "select_element": ["<!DOCTYPE>", "html", "head", "body","meta", "title","footer"]},
        {"topic_id": "2_1", "select_element": ["div"]},
        {"topic_id": "2_2", "select_element": ["ol","li"]},
        {"topic_id": "2_3", "select_element": ["ul"]},
        {"topic_id": "3_1", "select_element": ["input", "button"]},
        {"topic_id": "3_2", "select_element": ["label"]},
        {"topic_id": "3_3", "select_element": ["form"]},
        {"topic_id": "4_1", "select_element": []},
        {"topic_id": "4_2", "select_element": []},
        {"topic_id": "4_3", "select_element": []},
        {"topic_id": "5_1", "select_element": ["img"]},
        {"topic_id": "5_2", "select_element": ["audio","source"]},
        {"topic_id": "5_3", "select_element": ["video"]},
        {"topic_id": "6_1", "select_element": []},
        {"topic_id": "6_2", "select_element": []},
        {"topic_id": "6_3", "select_element": []}
    ]
}