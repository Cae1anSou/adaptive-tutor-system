{
    "topic_id": "2_3",
    "title": "2_3 创建无序列表",
    "levels": [
            {
                "level": 1,
                "description": "在网页开发中，我们经常需要展示一些没有特定顺序的项目，比如购物清单、兴趣爱好或者菜单项。这时候，HTML 提供了一个非常有用的标签——ul，也就是无序列表（unordered list）来帮助我们组织这些内容。ul 标签本身代表一个列表的容器，但它并不会直接显示具体的项目内容。真正的列表项是由 li 标签（list item）来定义的。每一个 li 标签就代表列表中的一个条目。浏览器默认会在每个 li 项的前面显示一个圆点作为标记，表示这是一个无序的项目。例如，如果你想列出几种水果，你可以先写一个 ul 标签，然后在里面放入多个 li 标签，每个 li 包含一种水果的名称。这样，浏览器就会自动将它们排列成一个带圆点的垂直列表。ul 和 li 是成对使用的结构，ul 是外层容器，li 是内部的子元素，它们共同构成了网页中常见的点状列表样式，是前端学习中最基础也是最实用的结构之一。"
            },
            {
                "level": 2,
                "description": "在实际开发中，无序列表不仅仅用于简单的文字罗列，它还广泛应用于导航菜单、侧边栏目录、商品分类等界面组件中。例如，一个网站的主导航栏通常就是一个水平排列的无序列表，每个列表项代表一个页面链接。通过结合 HTML 的 a 标签和 ul、li 结构，我们可以创建出既语义化又易于样式的导航结构。此外，无序列表支持嵌套，也就是说，你可以在一个 li 标签内部再放入另一个 ul 列表，从而形成多级菜单或子分类。这种结构在制作下拉菜单或树形目录时非常有用。为了让列表更好地适应不同的布局需求，我们通常会配合 CSS 进行样式调整，比如去除默认的圆点、修改列表项的间距、设置浮动或弹性布局来实现横向排列等。值得注意的是，虽然 ul 用于无序内容，而 ol 用于有序内容（带数字编号），但在实际使用中，有时即使内容有顺序，开发者也会选择 ul 并通过 CSS 自定义编号，以获得更大的样式控制自由度。"
            },
            {
                "level": 3,
                "description": "从底层机制来看，ul 元素属于 HTML 中的“流内容”（Flow Content）类别，意味着它可以包含大多数其他块级或内联元素，具有良好的包容性。浏览器在解析 ul 时，会为其生成一个块级盒模型，每个 li 子元素默认也是块级元素，垂直堆叠排列。这种结构不仅有利于语义化标记，也有助于屏幕阅读器等辅助技术正确识别列表内容，提升网页的可访问性。在性能方面，过深的嵌套或过多的 li 项可能会影响页面渲染效率，尤其是在动态生成大量列表项时，建议结合虚拟滚动或分页技术进行优化。CSS 提供了 list-style 属性来控制列表标记的样式，包括 disc（实心圆）、circle（空心圆）、square（方块）或 none（无标记）。此外，通过设置 li 的 display 属性为 inline 或 inline-block，可以实现横向排列；使用 flex 或 grid 布局则能更灵活地控制对齐和分布。理解 ul 和 li 的盒模型行为以及与 CSS 布局模型的交互，是构建复杂用户界面的基础。"
            },
            {
                "level": 4,
                "description": "为了巩固对无序列表的理解，我们来完成一个综合练习：假设你要为一个宠物商店的网页添加一个“狗狗喜欢的玩具”列表。首先，在页面中添加一个 h3 标题，内容为“狗狗喜欢的玩具”。接着，在标题下方创建一个 ul 元素，并在其中添加三个 li 子元素，分别包含“飞盘”、“咬绳”和“橡胶球”这三个项目。确保 ul 标签正确嵌套在 h3 之后，每个 li 的文本内容准确无误。你可以通过浏览器的开发者工具检查结构是否正确。完成后，尝试使用 CSS 将列表项从垂直排列改为横向排列：给 ul 添加 display: flex 样式，并设置 justify-content: space-around 使项目均匀分布。还可以通过 list-style: none 去除默认的圆点标记，让列表看起来更简洁。这个练习不仅涵盖了 ul 和 li 的基本用法，还结合了 HTML 结构顺序、CSS 布局和样式控制，帮助你全面掌握无序列表在实际项目中的应用方式。"
            }
        ],
    "sc_all": [
        {"topic_id": "1_1", "select_element": ["h1", "h2", "h3", "h4", "h5", "h6", "p","span"]},
        {"topic_id": "1_2", "select_element": []},
        {"topic_id": "1_3", "select_element": ["<!DOCTYPE>", "html", "head", "body","meta", "title","footer"]},
        {"topic_id": "2_1", "select_element": ["div"]},
        {"topic_id": "2_2", "select_element": ["ol","li"]},
        {"topic_id": "2_3", "select_element": ["ul"]},
        {"topic_id": "3_1", "select_element": ["input", "button"]},
        {"topic_id": "3_2", "select_element": ["label"]},
        {"topic_id": "3_3", "select_element": ["form"]},
        {"topic_id": "4_1", "select_element": []},
        {"topic_id": "4_2", "select_element": []},
        {"topic_id": "4_3", "select_element": []},
        {"topic_id": "5_1", "select_element": ["img"]},
        {"topic_id": "5_2", "select_element": ["audio","source"]},
        {"topic_id": "5_3", "select_element": ["video"]},
        {"topic_id": "6_1", "select_element": []},
        {"topic_id": "6_2", "select_element": []},
        {"topic_id": "6_3", "select_element": []}
    ]
}