{
    "topic_id": "1_3",
    "title": "构建页面基本结构",
    "levels": [
            {
                "level": 1,
                "description": "在学习网页开发时，首先要了解HTML的基本结构。HTML是超文本标记语言的缩写，它是构建网页内容的基础。每一个HTML文档都必须从一个重要的声明开始：<!DOCTYPE html>。这个声明告诉浏览器当前文档使用的是HTML5标准，避免浏览器进入兼容模式，从而确保页面能正确渲染。接下来是<html>标签，它是整个HTML文档的根元素，所有其他标签都要嵌套在其中。为了帮助浏览器和搜索引擎理解网页的语言，我们通常会在<html>标签中添加lang属性，比如lang=\"en\"表示英文，lang=\"zh\"表示中文。文档的头部信息放在<head>标签内，这部分内容不会直接显示在页面上，但非常重要，用于定义字符编码、网页标题、引入CSS样式表等。字符编码通常设置为UTF-8，这是一种广泛支持的编码方式，可以正确显示中文、英文和其他语言字符。此外，<meta>标签可以用来设置viewport，使网页在手机等设备上具有良好的显示效果，通过设置width=device-width，可以让页面宽度与设备屏幕一致，initial-scale=1.0则表示初始缩放比例为1。最后，<title>标签用于定义浏览器标签页上显示的标题，这对用户识别页面和搜索引擎优化都很重要。"
            },
            {
                "level": 2,
                "description": "在实际开发中，HTML文档的结构不仅仅是语法要求，更是组织内容和提升可维护性的关键。例如，<head>区域虽然不直接展示内容，但它承载了大量关键信息。除了设置字符编码和viewport外，还可以在这里引入外部资源，比如CSS文件、JavaScript脚本、网站图标（favicon）以及SEO相关的元数据，如页面描述和关键词。合理组织<head>中的内容有助于提升网页加载性能和搜索引擎排名。同时，<body>标签是网页主体内容的容器，所有用户可见的内容都应放在其中，比如文本、图片、链接、表单等。在<body>内部，我们可以使用语义化标签如<header>、<main>、<section>、<article>和<footer>来划分页面结构，这不仅有助于开发者理解代码逻辑，也能提升网页的可访问性和SEO效果。例如，<footer>通常用于放置版权信息、联系方式或相关链接，它应位于<body>的底部，作为页面的结束部分。这些标签的合理嵌套和使用，构成了清晰、可读性强的HTML结构，为后续的样式设计和交互开发打下良好基础。"
            },
            {
                "level": 3,
                "description": "深入理解HTML文档结构的机制，有助于我们写出更高效、更兼容的代码。浏览器在加载网页时，会按照从上到下的顺序解析HTML文档。因此，<head>中的<meta>标签必须尽早出现，尤其是charset的定义，应尽量靠近文档顶部，避免因编码识别错误导致乱码。viewport的设置对移动端体验至关重要，如果不设置，移动浏览器可能会以桌面宽度渲染页面，导致内容过小，用户需要手动缩放。此外，HTML5引入了语义化标签，使得文档结构更具逻辑性。例如，<footer>不仅是一个容器，还具有特定的语义含义，屏幕阅读器等辅助工具会识别它作为页面底部信息区域，提升无障碍访问体验。在大型项目中，HTML结构的规范性直接影响团队协作效率和后期维护成本。使用一致的结构模板、合理的缩进和注释，能够显著提升代码可读性。同时，现代前端开发常结合构建工具和模板引擎，自动生成标准化的HTML骨架，减少人为错误。理解这些底层机制，有助于我们从单纯写代码转向构建可维护、高性能的网页应用。"
            },
            {
                "level": 4,
                "description": "现在我们来动手实践一个完整的HTML页面结构示例。假设我们要创建一个名为“动物世界介绍”的网页，要求语言为中文，字符编码为UTF-8，适配移动设备，并包含基本的页面结构。以下是一个符合标准的示例代码：\n<!DOCTYPE html>\n<html lang=\"zh\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>动物世界介绍</title>\n  </head>\n  <body>\n    <h1>欢迎来到动物世界</h1>\n    <p>这里介绍各种有趣的动物。</p>\n    <footer>© 2025 动物世界. 保留所有权利。</footer>\n  </body>\n</html>\n在这个例子中，我们完整地构建了HTML文档的基本骨架。你可以尝试修改title内容，添加更多文本或图片，并在footer中加入链接。通过不断练习，你将熟练掌握HTML结构的搭建，为后续学习CSS样式和JavaScript交互打下坚实基础。"
            }
        ],
    "sc_all": [
        {"topic_id": "1_1", "select_element": ["h1", "h2", "h3", "h4", "h5", "h6", "p","span"]},
        {"topic_id": "1_2", "select_element": []},
        {"topic_id": "1_3", "select_element": ["<!DOCTYPE>", "html", "head", "body","meta", "title","footer"]},
        {"topic_id": "2_1", "select_element": ["div"]},
        {"topic_id": "2_2", "select_element": ["ol","li"]},
        {"topic_id": "2_3", "select_element": ["ul"]},
        {"topic_id": "3_1", "select_element": ["input", "button"]},
        {"topic_id": "3_2", "select_element": ["label"]},
        {"topic_id": "3_3", "select_element": ["form"]},
        {"topic_id": "4_1", "select_element": []},
        {"topic_id": "4_2", "select_element": []},
        {"topic_id": "4_3", "select_element": []},
        {"topic_id": "5_1", "select_element": ["img"]},
        {"topic_id": "5_2", "select_element": ["audio","source"]},
        {"topic_id": "5_3", "select_element": ["video"]},
        {"topic_id": "6_1", "select_element": []},
        {"topic_id": "6_2", "select_element": []},
        {"topic_id": "6_3", "select_element": []}
    ]
}