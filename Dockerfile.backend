# 使用Python 3.12作为基础镜像
FROM python:3.12-slim

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# 配置APT使用清华大学镜像源
RUN echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian/ trixie main contrib non-free non-free-firmware" > /etc/apt/sources.list && \
    echo "deb https://mirrors.tuna.tsinghua.edu.cn/debian/ trixie-updates main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "deb https://security.debian.org/debian-security trixie-security main contrib non-free non-free-firmware" >> /etc/apt/sources.list && \
    echo "Acquire::http::Pipeline-Depth \"0\";" > /etc/apt/apt.conf.d/99nopipelining

# 安装系统依赖
RUN apt-get update --fix-missing \
    && apt-get install -y --no-install-recommends \
        build-essential \
        netcat-openbsd \
        curl \
        wget \
        libdbus-1-3 \
        libdbus-glib-1-2 \
        libatk1.0-0 \
        libatk-bridge2.0-0 \
        libglib2.0-0 \
        libnss3 \
        libx11-6 \
        libxcomposite1 \
        libxdamage1 \
        libxfixes3 \
        libxrandr2 \
        libgbm1 \
        libasound2 \
        libxkbcommon0 \
        libxkbcommon-x11-0 \
        libwayland-cursor0 \
        libwayland-egl1 \
        libwayland-client0 \
        libwayland-server0 \
    && rm -rf /var/lib/apt/lists/*

# 安装Node.js
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs

# 验证Node.js安装
RUN node --version && npm --version

# 复制requirements文件并安装Python依赖
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# 复制项目代码
COPY . .

# 暴露端口
EXPOSE 8000

# 安装Playwright浏览器
RUN python -m playwright install chromium
RUN ls -la /root/.cache/ms-playwright/

# 设置环境变量
ENV PLAYWRIGHT_BROWSERS_PATH=/root/.cache/ms-playwright
ENV PLAYWRIGHT_SKIP_VALIDATE_HOST_REQUIREMENTS=true

WORKDIR /app/backend

# 启动命令
CMD ["python", "-m", "app.main"]